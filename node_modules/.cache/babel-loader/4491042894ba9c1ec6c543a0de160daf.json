{"ast":null,"code":"var _jsxFileName = \"/home/dev01/Documents/projects/escola-js/jobs/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport Header from \"./componets/Header\";\nimport theme from './theme/theme';\nimport SearchBar from \"./componets/SearchBar\";\nimport JobCards from \"./componets/Job/JobCards\";\nimport NewJobModal from \"./componets/Job/NewJobModal\";\nimport { firestore, app } from \"./firebase/config\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport ViewJobModal from \"./componets/Job/ViewJobModal\";\nexport default (() => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [customSearch, setCustomSearch] = useState(false);\n  const [newJobMobal, setNewJobMobal] = useState(false);\n  const [viewJob, setViewJob] = useState({});\n\n  const fetchJobs = async () => {\n    setCustomSearch(false);\n    setLoading(true);\n    const req = await firestore.collection('jobs').orderBy('postedOn', 'desc').get();\n    const tempJobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    }));\n    setJobs(tempJobs);\n    setLoading(false);\n  };\n\n  const fetchJobsCustom = async jobSearch => {\n    setLoading(true);\n    setCustomSearch(true);\n    const req = await firestore.collection('jobs').orderBy('postedOn', 'desc').where(\"location\", '==', jobSearch.location).where(\"type\", '==', jobSearch.type).get();\n    const tempJobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    }));\n    setJobs(tempJobs);\n    setLoading(false);\n  };\n\n  const postJob = async jobDetails => {\n    await firestore.collection('jobs').add({ ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    });\n    fetchJobs();\n  };\n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    openNewJobModal: () => setNewJobMobal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(NewJobModal, {\n    closeModal: () => setNewJobMobal(false),\n    newJobMobal: newJobMobal,\n    postJob: postJob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ViewJobModal, {\n    job: viewJob,\n    closeModal: () => setViewJob({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mb: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    fetchJobsCustom: fetchJobsCustom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    py: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, customSearch && /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: fetchJobs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }))), jobs.map(job => /*#__PURE__*/React.createElement(JobCards, Object.assign({\n    open: () => setViewJob(job),\n    key: job.id\n  }, job, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }))))))));\n});","map":{"version":3,"sources":["/home/dev01/Documents/projects/escola-js/jobs/src/App.js"],"names":["React","useState","useEffect","Box","Button","CircularProgress","Grid","ThemeProvider","Header","theme","SearchBar","JobCards","NewJobModal","firestore","app","Close","CloseIcon","ViewJobModal","jobs","setJobs","loading","setLoading","customSearch","setCustomSearch","newJobMobal","setNewJobMobal","viewJob","setViewJob","fetchJobs","req","collection","orderBy","get","tempJobs","docs","map","job","data","id","postedOn","toDate","fetchJobsCustom","jobSearch","where","location","type","postJob","jobDetails","add","FieldValue","serverTimestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,gBAAtB,EAAwCC,IAAxC,EAA8CC,aAA9C,QAAmE,mBAAnE;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,mBAA/B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,oBAAnC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,gBAAe,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAM2B,SAAS,GAAI,YAAY;AAC7BL,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMQ,GAAG,GAAG,MAAMhB,SAAS,CAACiB,UAAV,CAAqB,MAArB,EAA6BC,OAA7B,CAAqC,UAArC,EAAiD,MAAjD,EAAyDC,GAAzD,EAAlB;AACA,UAAMC,QAAQ,GAAGJ,GAAG,CAACK,IAAJ,CAASC,GAAT,CAAcC,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACC,IAAJ,EAAL;AAAiBC,MAAAA,EAAE,EAAEF,GAAG,CAACE,EAAzB;AAA6BC,MAAAA,QAAQ,EAAEH,GAAG,CAACC,IAAJ,GAAWE,QAAX,CAAoBC,MAApB;AAAvC,KAAV,CAAb,CAAjB;AAEArB,IAAAA,OAAO,CAACc,QAAD,CAAP;AACAZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GARD;;AAUA,QAAMoB,eAAe,GAAG,MAAMC,SAAN,IAAmB;AAEzCrB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMM,GAAG,GAAG,MAAMhB,SAAS,CACxBiB,UADe,CACJ,MADI,EAEfC,OAFe,CAEP,UAFO,EAEK,MAFL,EAGfY,KAHe,CAGT,UAHS,EAGE,IAHF,EAGQD,SAAS,CAACE,QAHlB,EAIfD,KAJe,CAIT,MAJS,EAIF,IAJE,EAIID,SAAS,CAACG,IAJd,EAKfb,GALe,EAAlB;AAMA,UAAMC,QAAQ,GAAGJ,GAAG,CAACK,IAAJ,CAASC,GAAT,CAAcC,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACC,IAAJ,EAAL;AAAiBC,MAAAA,EAAE,EAAEF,GAAG,CAACE,EAAzB;AAA6BC,MAAAA,QAAQ,EAAEH,GAAG,CAACC,IAAJ,GAAWE,QAAX,CAAoBC,MAApB;AAAvC,KAAV,CAAb,CAAjB;AAEArB,IAAAA,OAAO,CAACc,QAAD,CAAP;AACAZ,IAAAA,UAAU,CAAC,KAAD,CAAV;AAGD,GAhBD;;AAkBA,QAAMyB,OAAO,GAAG,MAAMC,UAAN,IAAoB;AAClC,UAAMlC,SAAS,CAACiB,UAAV,CAAqB,MAArB,EAA6BkB,GAA7B,CAAiC,EACrC,GAAGD,UADkC;AAErCR,MAAAA,QAAQ,EAAEzB,GAAG,CAACD,SAAJ,CAAcoC,UAAd,CAAyBC,eAAzB;AAF2B,KAAjC,CAAN;AAIAtB,IAAAA,SAAS;AACV,GAND;;AAQA1B,EAAAA,SAAS,CAAC,MAAK;AACb0B,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACA,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEnB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,eAAe,EAAE,MAAMgB,cAAc,CAAC,IAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AACE,IAAA,UAAU,EACR,MAAMA,cAAc,CAAC,KAAD,CAFxB;AAIE,IAAA,WAAW,EAAED,WAJf;AAKE,IAAA,OAAO,EAAEsB,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEpB,OAAnB;AAA4B,IAAA,UAAU,EAAE,MAAMC,UAAU,CAAC,EAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAEc,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIIrB,OAAO,gBACP,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,QAAnC;AAA4C,IAAA,EAAE,EAAE,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADO,gBAKL,0CACCE,YAAY,iBACT,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,OAAO,EAAC,MAApB;AAA2B,IAAA,cAAc,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFJ,EASGV,IAAI,CAACiB,GAAL,CAASC,GAAG,iBACX,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,MAAMT,UAAU,CAACS,GAAD,CAAhC;AAAuC,IAAA,GAAG,EAAEA,GAAG,CAACE;AAAhD,KAAwDF,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CATH,CATN,CADF,CADF,CAVF,CADA;AA2CD,CA1FD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport Header from \"./componets/Header\";\nimport theme from './theme/theme';\nimport SearchBar from \"./componets/SearchBar\";\nimport JobCards from \"./componets/Job/JobCards\";\nimport NewJobModal from \"./componets/Job/NewJobModal\";\nimport { firestore, app } from \"./firebase/config\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport ViewJobModal from \"./componets/Job/ViewJobModal\";\n\nexport default () => {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [customSearch, setCustomSearch] = useState(false);\n  const [newJobMobal, setNewJobMobal] = useState(false);\n  const [viewJob, setViewJob] = useState({});\n\n  const fetchJobs =  async () => {\n    setCustomSearch(false)\n    setLoading(true);\n    const req = await firestore.collection('jobs').orderBy('postedOn', 'desc').get();\n    const tempJobs = req.docs.map((job) => ({ ...job.data(), id: job.id, postedOn: job.data().postedOn.toDate() }));\n    \n    setJobs(tempJobs);\n    setLoading(false);\n  }\n\n  const fetchJobsCustom = async jobSearch => {\n\n    setLoading(true);\n    setCustomSearch(true);\n    const req = await firestore\n      .collection('jobs')\n      .orderBy('postedOn', 'desc')\n      .where(\"location\",'==', jobSearch.location)\n      .where(\"type\",'==', jobSearch.type)\n      .get();\n    const tempJobs = req.docs.map((job) => ({ ...job.data(), id: job.id, postedOn: job.data().postedOn.toDate() }));\n    \n    setJobs(tempJobs);\n    setLoading(false);\n\n\n  }\n\n  const postJob = async jobDetails => {\n    await firestore.collection('jobs').add({\n      ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    })\n    fetchJobs();  \n  }\n\n  useEffect(() =>{\n    fetchJobs();\n  }, [])\n\n  return (\n  <ThemeProvider theme={theme}>\n    <Header openNewJobModal={() => setNewJobMobal(true)} />\n    <NewJobModal \n      closeModal={\n        () => setNewJobMobal(false)\n      } \n      newJobMobal={newJobMobal}  \n      postJob={postJob} \n    />\n    <ViewJobModal job={viewJob} closeModal={() => setViewJob({})}  />\n    <Box mb={3}>\n      <Grid container justify=\"center\">\n        <Grid xs={10}>\n          <SearchBar fetchJobsCustom={fetchJobsCustom} />\n\n          {\n            loading ? (\n            <Box display=\"flex\" justifyContent=\"center\" py={4} >\n              <CircularProgress /> \n            </Box>\n            ) : (\n              <>\n              {customSearch && \n                ( <Box my={2} display=\"flex\" justifyContent=\"flex-end\">\n                    <Button onClick={fetchJobs}>\n                      <CloseIcon size={20}/>\n                      \n                    </Button>\n                  </Box>\n                )}\n                {jobs.map(job => ( \n                  <JobCards open={() => setViewJob(job)} key={job.id} {...job} />\n                ))}\n              </>\n            )}\n          \n          \n        </Grid>\n      </Grid>\n    </Box>\n  </ThemeProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}